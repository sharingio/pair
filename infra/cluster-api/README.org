#+NAME: Sharing.io production cluster

* Cluster Notes

Preloaded with:
- packet-csi
- packet-cloud-controller-manager
- cert-manager v1.0.3
- weavenet
- helm
- nginx-ingress
- metallb
- metrics-server
- humacs

* Prelimiary steps

** Local cluster / outside cluster
*** With Kind
#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
kind create cluster
#+end_src

*** With Minikube
#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
minikube start
#+end_src

** Set credentials
Use the following strings in a ~:~ minibuffer:
#+begin_src elisp :results none
(setenv "PACKET_PROJECT_ID" (read-from-minibuffer "PACKET_PROJECT_ID: "))
(setenv "PACKET_API_KEY" (read-from-minibuffer "PACKET_API_KEY: "))
#+end_src

#+name: get-packet-project-id
#+begin_src elisp :results silent
(getenv "PACKET_PROJECT_ID")
#+end_src

#+name: get-packet-auth-token
#+begin_src elisp :results silent
(getenv "PACKET_API_KEY")
#+end_src

** Initialize the packet plugin for Cluster-API

#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
export PACKET_PROJECT_ID=<<get-packet-project-id()>>
    export PACKET_API_KEY=<<get-packet-auth-token()>>
clusterctl init --infrastructure=packet
#+end_src

   #+RESULTS:
   #+begin_example
   #+end_example

** Wait until ready
#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
  kubectl wait -n cluster-api-provider-packet-system --for=condition=ready pod --selector=control-plane=controller-manager --timeout=90s
#+end_src

** View logs
#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
  kubectl -n cluster-api-provider-packet-system logs -l control-plane=controller-manager -c manager
#+end_src

* Cluster-API
** Create configuration for the Packet machine

#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
export CLUSTER_NAME="sharingio"
export PROJECT_ID=7a44b778-41d2-49fa-9c92-99148516c600
export PACKET_PROJECT_ID=$PROJECT_ID
export FACILITY=sjc1
export KUBERNETES_VERSION=v1.21.2
export POD_CIDR=10.244.0.0/16
export SERVICE_CIDR=10.96.0.0/12
export NODE_OS=ubuntu_20_04
export CONTROLPLANE_NODE_TYPE=c1.small.x86
export WORKER_NODE_TYPE=c1.small.x86
export WORKER_MACHINE_COUNT=0
clusterctl config cluster "$CLUSTER_NAME" --from ./cluster-packet-template.yaml -n "$CLUSTER_NAME" > cluster-packet-"$CLUSTER_NAME".yaml
#+end_src

** Create the namespace

#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
kubectl create ns sharingio
#+end_src

** Create the cluster

#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
kubectl -n sharingio apply -f cluster-packet-sharingio.yaml
#+end_src

** Get the Kubeconfig

#+begin_src tmate :window cluster-api-apply :session packet-cluster-api :noweb yes
kubectl -n sharingio get secrets sharingio-kubeconfig -o=jsonpath='{.data.value}' | base64 -d > ~/.kube/packet-sharingio
#+end_src

** View logs

#+begin_src tmate :window ssh :session packet-cluster-api :noweb yes
ssh root@$(kubectl -n sharingio get cluster sharingio -o=jsonpath='{.spec.controlPlaneEndpoint.host}') tail -f /var/log/cloud-init-output.log
#+end_src

** Attach to Kubemacs
#+begin_src tmate :window humacs-cluster :session packet-cluster-api :noweb yes
export KUBECONFIG="$HOME/.kube/packet-sharingio"
kubectl wait -n sharingio --for=condition=ready pod --selector=app.kubernetes.io/name="humacs" --timeout=90s
kubectl -n sharingio exec -it statefulset/sharingio -- attach
#+end_src

* Transfer cluster management to itself
** Init
#+begin_src tmate :window clusterctlinit :session packet-cluster-api :noweb yes
export KUBECONFIG="$HOME/.kube/packet-sharingio"
export PACKET_PROJECT_ID=<<get-packet-project-id()>>
       export PACKET_API_KEY=<<get-packet-auth-token()>>
clusterctl init --infrastructure=packet
#+end_src

** Prepare
#+begin_src tmate :window clusterctlinit :session packet-cluster-api :noweb yes
export KUBECONFIG="$HOME/.kube/packet-sharingio"
kubectl create namespace sharingio
#+end_src

** Move
#+begin_src tmate :window clusterctlinit :session packet-cluster-api :noweb yes
clusterctl move -n sharingio --kubeconfig "$HOME/.kube/config" --to-kubeconfig "$HOME/.kube/packet-sharingio"
#+end_src
