apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: sharingiopair-control-plane
  namespace: sharingio
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: PacketMachineTemplate
    name: sharingiopair-control-plane
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
    postKubeadmCommands:
    - |
      cat <<EOF >> /etc/network/interfaces
      auto lo:0
      iface lo:0 inet static
        address {{ .controlPlaneEndpoint }}
        netmask 255.255.255.255
      EOF
    - systemctl restart networking
    - mkdir -p ~/.kube/
    - cp /etc/kubernetes/admin.conf ~/.kube/config
    - 'kubectl create secret generic -n kube-system metal-cloud-config --from-literal=cloud-sa.json=''{"apiKey": "{{ .apiKey }}","projectID": "7a44b778-41d2-49fa-9c92-99148516c600","loadbalancer":"metallb:///"}'''
    - kubectl apply -f https://github.com/equinix/cloud-provider-equinix-metal/releases/download/v3.2.2/deployment.yaml
    - kubectl taint node --all node-role.kubernetes.io/master-
    preKubeadmCommands:
    - sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
    - swapoff -a
    - mount -a
    - |
      cat <<EOF > /etc/modules-load.d/containerd.conf
      overlay
      br_netfilter
      EOF
    - modprobe overlay
    - modprobe br_netfilter
    - |
      cat <<EOF > /etc/sysctl.d/99-kubernetes-cri.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.ipv4.ip_forward                 = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      EOF
    - sysctl --system
    - apt-get -y update
    - DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https curl
    - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
    - apt-get update -y
    - TRIMMED_KUBERNETES_VERSION=$(echo {{ .kubernetesVersion }} | sed 's/\./\./g' | sed 's/^v//')
    - RESOLVED_KUBERNETES_VERSION=$(apt-cache policy kubelet | awk -v VERSION=${TRIMMED_KUBERNETES_VERSION} '$1~ VERSION { print $1 }' | head -n1)
    - apt-get install -y ca-certificates socat jq ebtables apt-transport-https cloud-utils prips containerd kubelet=${RESOLVED_KUBERNETES_VERSION} kubeadm=${RESOLVED_KUBERNETES_VERSION} kubectl=${RESOLVED_KUBERNETES_VERSION}
    - systemctl daemon-reload
    - systemctl enable containerd
    - systemctl start containerd
    - ping -c 3 -q {{ .controlPlaneEndpoint }} && echo OK || ip addr add {{ .controlPlaneEndpoint }} dev lo
  replicas: 3
  version: v1.21.2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: PacketMachineTemplate
metadata:
  name: sharingiopair-control-plane
  namespace: sharingio
spec:
  template:
    spec:
      OS: ubuntu_20_04
      billingCycle: hourly
      machineType: c1.small.x86
      sshKeys:
      - gh:BobyMCbobs
      tags: []
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: sharingiopair
  namespace: sharingio
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 10.244.0.0/16
    services:
      cidrBlocks:
      - 10.96.0.0/12
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: sharingiopair-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: PacketCluster
    name: sharingiopair
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: PacketCluster
metadata:
  name: sharingiopair
  namespace: sharingio
spec:
  facility: sjc1
  projectID: 7a44b778-41d2-49fa-9c92-99148516c600
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: sharingiopair
    pool: worker-a
  name: sharingiopair-worker-a
  namespace: sharingio
spec:
  clusterName: sharingiopair
  replicas: 0
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: sharingiopair
      pool: worker-a
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: sharingiopair
        pool: worker-a
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: sharingiopair-worker-a
      clusterName: sharingiopair
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: PacketMachineTemplate
        name: sharingiopair-worker-a
      version: v1.21.2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: PacketMachineTemplate
metadata:
  name: sharingiopair-worker-a
  namespace: sharingio
spec:
  template:
    spec:
      OS: ubuntu_20_04
      billingCycle: hourly
      machineType: c1.small.x86
      sshKeys:
      - gh:BobyMCbobs
      tags: []
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: sharingiopair-worker-a
  namespace: sharingio
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
      preKubeadmCommands:
      - sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
      - swapoff -a
      - mount -a
      - |
        cat <<EOF > /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
        EOF
      - modprobe overlay
      - modprobe br_netfilter
      - |
        cat <<EOF > /etc/sysctl.d/99-kubernetes-cri.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        EOF
      - sysctl --system
      - apt-get -y update
      - DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https curl
      - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
      - echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
      - apt-get update -y
      - TRIMMED_KUBERNETES_VERSION=$(echo {{ .kubernetesVersion }} | sed 's/\./\./g' | sed 's/^v//')
      - RESOLVED_KUBERNETES_VERSION=$(apt-cache policy kubelet | awk -v VERSION=${TRIMMED_KUBERNETES_VERSION} '$1~ VERSION { print $1 }' | head -n1)
      - apt-get install -y ca-certificates socat jq ebtables apt-transport-https cloud-utils prips containerd kubelet=${RESOLVED_KUBERNETES_VERSION} kubeadm=${RESOLVED_KUBERNETES_VERSION} kubectl=${RESOLVED_KUBERNETES_VERSION}
      - systemctl daemon-reload
      - systemctl enable containerd
      - systemctl start containerd
